// numex.jape
// diana, 13 Sep 00
// modified diana, 18 Jan 01

Phase:	Numex
//Input: Token SpaceToken Lookup
Options: control = appelt

///////////////////////////////////////////////////////////////

//Money Rules


Macro: MILLION_BILLION
({Token.string == "m"}|
{Token.string == "million"}|
{Token.string == "b"}|
{Token.string == "billion"}|
{Token.string == "bn"}|
{Token.string == "k"}|
{Token.string == "K"}
)

Macro: NUMBER_WORDS
// two hundred and thirty five
// twenty five

(
 (({Lookup.majorType == number} SPACE)*
   {Lookup.majorType == number}
   (SPACE)
   {Token.string == "and"}
   (SPACE)
 )*
 ({Lookup.majorType == number} SPACE)*
   {Lookup.majorType == number}
)


Macro: AMOUNT_NUMBER
// enables commas, decimal points and million/billion
// to be included in a number
 
(({Token.kind == number}
(({Token.string == ","}|
  {Token.string == "."})
{Token.kind == number})*
|
(NUMBER_WORDS))
(SPACE)?
(MILLION_BILLION)?
)


Rule:	MoneyCurrencyUnit
// 30 pounds
  (        
      (AMOUNT_NUMBER)
      (SPACE)?
      ({Lookup.majorType == currency_unit})
  )
:number -->
  :number.Money = {kind = "number", rule = "MoneyCurrencyUnit"}


Rule:	MoneySymbolUnit

// $30 
// $30 US
// not $1$21
// $20US

//N.B. Must be preceded and followed by space (or ? else?)

  (SPACE |
   {Token.kind == punctuation, Token.position == startpunct}     
)
  (   
      ({Token.symbolkind == currency})
      (SPACE)?
      (AMOUNT_NUMBER)
      ((SPACE)?
	{Lookup.majorType == currency_unit})?
  ) 
:number 
 (SPACE |
   {Token.kind == punctuation, Token.position == endpunct}     
)
 -->
  :number.Money = {kind = "number", rule = "MoneySymbolUnit"}

//////////////////////////////////////////////////////////////

// Percentage Rules

Macro: PERCENT
({Token.string == "%"} | 
 {Token.string == "percent"}|
 ({Token.string == "per"}
 SPACE
 {Token.string == "cent"})
)


Rule: PercentBasic
// +20%
// minus 10 percent
// two point four percent

(
 ({Token.string == "+"}|
  {Token.string == "-"}|
  {Token.string == "minus"} 
  (SPACE)? 
 )?
 (({Token.kind == number}|NUMBER_WORDS)
  SPACE
  {Token.string == "point"}
  SPACE
 )? 
 ({Token.kind == number}|NUMBER_WORDS)
 (SPACE)?
 (PERCENT)
)
:number -->
  :number.Percent = {rule = "PercentBasic"}

Rule: PercentSpan
// 20-30%
// two to four percent

(
 ({Token.kind == number}|NUMBER_WORDS)
 (SPACE)? 
 ({Token.string == "-"} |
  {Token.string == "to"})
 (SPACE)
 ({Token.kind == number}|NUMBER_WORDS)
 (SPACE)? 
 (PERCENT)
)
:number -->
  :number.Percent = {rule = "PercentSpan"}
